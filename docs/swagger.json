{
  "openapi": "3.0.0",
  "info": {
    "description": "Swagger API for Authentication - HNGi7",
    "version": "1.0.0",
    "title": "Authentication"
  },
  "servers": [
    {
      "url": "https://auth.microapi.dev/v1"
    },
    {
      "url": "https://hngi7-team-avengers.herokuapp.com/v1"
    },
    {
      "url": "localhost:5000/v1"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "All actions by User"
    }
  ],
  "paths": {
    "/configure": {
      "post": {
        "tags": ["User"],
        "summary": "Configure",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["company_id"],
                "properties": {
                  "company_id": {
                    "type": "string",
                    "minLength": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created"
          },
          "400": {
            "description": "If email already exists, fields are not supplied, password is less than 5 characters, password does not equals confirm password"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/register": {
      "post": {
        "tags": ["User"],
        "summary": "Registers a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "confirmPassword"],
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 4,
                    "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 5
                  },
                  "confirmPassword": {
                    "type": "string",
                    "minLength": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Register"
                }
              }
            }
          },
          "400": {
            "description": "If email already exists, fields are not supplied, password is less than 5 characters, password does not equals confirm password"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/login": {
      "post": {
        "tags": ["User"],
        "summary": "Logins a registered user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 4,
                    "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 5
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login succesful!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          },
          "400": {
            "description": "If required parameters are missing"
          },
          "423": {
            "description": "If user does not exist"
          },
          "403": {
            "description": "If username or password is incorrect"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/authenticate": {
      "post": {
        "tags": ["User"],
        "summary": "Authenticate user token",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Login succesful!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Login"
                }
              }
            }
          },
          "400": {
            "description": "If required parameters are missing"
          },
          "403": {
            "description": "If unable to rest password, password incorrect or password do not match"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/reset-password": {
      "post": {
        "tags": ["User"],
        "summary": "Resets password",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "old_password",
                  "new_password",
                  "confirm_password"
                ],
                "properties": {
                  "old_password": {
                    "type": "string",
                    "minLength": 4
                  },
                  "new_password": {
                    "type": "string",
                    "minLength": 4
                  },
                  "confirm_password": {
                    "type": "string",
                    "minLength": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If password resets successful"
          },
          "400": {
            "description": "If required parameters are missing"
          },
          "403": {
            "description": "If unable to rest password, password incorrect or password do not match"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/forget-password": {
      "post": {
        "tags": ["User"],
        "summary": "Sends reset link to mail if user forgets password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 4,
                    "pattern": "/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If reset link is successfully sent"
          },
          "400": {
            "description": "If there are missing required parameter or the email address does not exist"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/change-password/{token}": {
      "post": {
        "tags": ["User"],
        "summary": "Changes user password",
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password"],
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 4
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "If password change is successful"
          },
          "400": {
            "description": "If password reset token is invalid or has expired or there is an error changing passwor"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/google/signin": {
      "get": {
        "tags": ["User"],
        "summary": "signs in with google account",
        "responses": {
          "201": {
            "description": "If operation is successful"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/google/callback": {
      "get": {
        "tags": ["User"],
        "summary": "Google callback",
        "responses": {
          "200": {
            "description": "If operation is successful"
          },
          "400": {
            "description": "If there is an error in signing a user in"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    },

    "/documentation": {
      "get": {
        "tags": ["User"],
        "summary": "JSON Documentation",
        "responses": {
          "200": {
            "description": "JSON format of the documentation"
          },
          "400": {
            "description": "If there is an error in signing a user in"
          },
          "500": {
            "description": "Server Error"
          }
        }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      }
    },
    "schemas": {
      "Register": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Login": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "userID": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "old_password": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          }
        }
      }
    }
  }
}
